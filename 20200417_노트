자바에서 사용하고자 하는 것
	
	자바에서의 객체지향 : 코드의 묶음(Variable& Method 의 묶음)
							ex ) 사람 -> 손흥민 <- 아래의 구성이 손흥민이라는 객체를 구성하는 구성 요소.
											-이름			//사람이 가지고 있는 속성 값.
											-생년월일
											-주소
											-나이
											-성별
											-주민등록번호
											...등등등

											
	Class 가 가지고 있는 것들.
		Variable -(인스턴스화)-> 객체(Object)[Instance] <= 이러한 구조로 메모리에 올라 간 다.
			ㄴ Static 으로 생성시점을 정의.
				ㄴ 인스턴스의 생성과 상관없이 초기화 됨.
				ㄴ 하나밖에 선언 할 수 없음.
				ㄴ Public으로 선언되면 누구나 어디서든 접근이 가능. / 아닌 경우는 new Class 로 생성해야 함.				
			ㄴ 생성자(Generator)로 초기화.	<= 자주 쓰이는 쪽은 생성자.
				ㄴfinal(상수선언) 키워드는 명시적으로 초기화 값을 지정해야 하지만, 생성자가 있을경우
				  생성자가 생성 하는 시점에서 상수로 선언된다.
			ㄴ 혹은 초기화 블럭으로 명시적으로 초기화
		
		Method	- 로직/처리구조 등등등...
		
------------------------------------------------------

Method Overloading
	- 클래스 하나에 같은 이름의 메소드를 여러개 정의(최소 2개 이상) 하는 것
	- 메소드 이름이 같아야 한다.
	- 매개변수의 개수(ex: sum(a,b,c) // sum(1,9)) 혹은 타입이 달라야 한다. / 같으면 구분이 불가능하다. <- 핵심
	- 매개변수는 같고 리턴이 다르면 오버로딩으로 성립하지 못한다.

	Method Overloading의 대표적 예시 -> System.out.println(자료) 
										ㄴ자료 자리에 어떤 타입의 데이터가 들어올 지 알 수 없을텐데
											알아서 판단한다.
											

StringBuilder	- 문자를 저장 할 수 있는 메모리 공간을 생성.
				  String 과의 차이점은 String + String 은 새로운 인스턴스 주소(상수-String)를 생성하지만
				  StringBuilder는 저장할 수 있는 메모리 공간에서 계속 읽고 쓴다.
				- 문자열의 복잡한 조합과정에서는 StringBuilder를 쓰는 것이 좋은데
				  String을 .append 할 때 마다 인스턴스가 매번 생성되지만
				  StringBuilder는 StringBuilder를 생성할 때 하나, 메소드의 호출에 의해 한개, 총 두개만 생성된다. (자원절약)
StringBuffer	- 위와 유사하지만 Buffer는 Thread(자원 동시경합)에 불안정.
	